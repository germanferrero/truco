ESPECIFICACIÓN DE REQUERIMIENTOS 

Ingeniería del Software I 

Ferrero German, Ferri Federico, Haag Karen, Reyes Martín

Universidad Nacional de Córdoba
FaMAF 
Año 2014




--------------------------------------------------------------------------------




CONTENIDO 

1. INTRODUCCIÓN 
1.1. Propósito
1.2. Alcance 
1.3. Definiciones, acrónimos y abreviaciones
1.4. Referencias
1.5. Visión general

2. DESCRIPCIÓN GENERAL 
2.1. Perspectiva del producto
2.2. Funciones del producto 
2.3. Características del usuario
2.4. Restricciones generales
2.5. Suposiciones y dependencias

3. REQUERIMIENTOS ESPECÍFICOS
3.1. Requerimientos específicas
3.2. Requerimientos funcionales
3.3. Requerimientos de desempeño
3.4. Restricciones de diseño
3.5. Atributos
3.6. Otros requisitos




--------------------------------------------------------------------------------




1. INTRODUCCIÓN



1.1 PROPÓSITO

    Este documento pretende dejar en claro las descripciones preeliminares de la
aplicación web “TRUCO”, dejando asentados los requerimientos para el desarrollo de la misma,
 cumpliendo las características de una buena SRS según norma IEEE 830,
 a modo de contrato entre el cliente y el desarrollador.
    El mismo está dirigido a los desarrolladores de la aplicación, el grupo FFHR,
y a los clientes interesados en el software, profesores de la cátedra de 
Ingeniería del Software I.


1.2 ALCANCE DEL PRODUCTO 

   La aplicación "Truco" será un simulador del juego de cartas omónimo popular argentino.
Diseñada para ser utilizada por usuarios con conectividad a internet, 
donde se enfrentarán en partidas “uno contra uno”.



1.3 DEFINICIONES, ACRÓNIMOS Y ABREVIATURAS

* USUARIO: persona que utilizará la aplicación.
* CUADRO DE DIÁLOGO: herramienta utilizada por dos usuarios jugando una misma
                     partida, dentro de la cuál pueden comunicarse a través de
                     mensajes de texto.
* CANTAR: sinónimo de la acción de proponer Envido, Truco, o cualquier derivado.
* PUNTOS OBJETIVO: meta a alcanzar por los jugadores para poder ganar el juego.
* PARTIDA: juego entre dos personas hasta alcanzar los puntos objetivo.
* REGISTRO DE PARTIDA: historial de la partida en curso, la cuál involucra tanto
                       el historial de puntos ya anotados, puntos a anotar al
                       finalizar la ronda y registro del estado de la ronda actual.
* MANO: el usuario al que le toca jugar primero en la ronda.
* LOBBY: pantalla principal del juego donde se puede crear una nueva partida o 
         unirse a una ya creada.



1.4 REFERENCIAS

* Enunciado provisto por la cátedra:
      http://www.famaf.proed.unc.edu.ar/pluginfile.php/14560/mod_resource/content/1/2014/Proyecto%20Ingenier%C3%ADa%20Truco.pdf
* Reglas de truco:
      http://www.mundomatero.com/truco.html
      http://www.ludoteka.com/truco.html
      http://www.juegos.gba.gov.ar/archivos/trash/reglamentos_2012/Reglamentos%20Tecnicos/Adultos%20Mayores/TRUCO.pdf



1.5 VISIÓN GENERAL

   En la siguiente sección (sección 2) de este documento se realiza una
descripción general del producto de software, presentando sus características
generales, sin entrar en demasiados detalles. Dentro de las cuales se definirán
las principales funciones que debe realizar la aplicación, caraterísticas que
tiene el usuario, restricciones generales, supuestos y dependencias que afectan
al desarrollo.

   En la sección 3 se definen con mas detalles los requerimientos específicos,
entre los que se encuentran los requerimientos de interfaz externa y requerimientos
funcionales del software, requerimientos de desempeño, restricciones de diseño,
atributos y otros requisitos.




--------------------------------------------------------------------------------




2. DESCRIPCIÓN GLOBAL



2.1 PERSPECTIVA DEL PRODUCTO 

   La aplicación esta diseñada para funcionar a través de la web, y para ser
utilizada por pares de personas. Se lleva un registro general donde se muestra
el ranking de las personas que mas partidas han ganado, por lo cual es necesario
la creación de una cuenta dentro de la página.



2.2 FUNCIONES DEL PRODUCTO 

   La aplicación de “TRUCO” debe cumplir con las siguientes funciones básicas
para cada usuario:
      * Gestionar una cuenta. Ya sea para crear una cuenta de usuario o para
        modificar la misma cambiando la contraseña.
      * Llevar a cabo una partida de truco.
      * Interactuar con los contrincantes a través de un chat privado en la mesa.
      * Verificar el ranking general de la aplicación, y la posición donde se
        encuentra en el mismo.



2.3 CARACTERÍSTICAS DEL USUARIO

   Los usuarios potenciales del sistema son todas aquellas personas interesadas
en el juego de truco que deseen jugar partidas uno-a-uno contra otras personas
en diferentes partes del mundo a través de la web.
   Todos los usuarios se ubican dentro de un mismo nivel jerárquico y pueden
realizar las funciones descriptas en el inciso 2.2.



2.4 RESTRICCIONES GENERALES

    * La aplicación tiene que estar desarrollada en Django.
    * Fecha límite de entrega del software es 02 de Septiembre de 2014
    * El juego será regido por las siguientes reglas:

    El juego consiste en emplear las tres cartas que se poseen, de la mejor manera posible, para
ganar al menos dos de las tres partes que componen cada ronda.
    El objetivo es ser el primero en llegar a los quince o treinta puntos, meta establecida
antes de iniciar el partido.

__Cartas
    El truco se juega con una baraja española sin ochos, nueves ni comodines.
Las cartas tienen una jerarquía determinada, y sólo pueden ganarle a una carta de menor
jerarquía en un enfrentamiento.
A continuación se listan las cartas en orden jerárquico.

1 de espadas
1 de bastos
7 de espadas
7 de oros
3 de cualquier palo
2 de cualquier palo
1 de copas y 1 de oros
12 de cualquier palo
11 de cualquier palo
10 de cualquier palo
7 de copas y de bastos
6 de cualquier palo
5 de cualquier palo
4 de cualquier palo


__Envido
    Si alguien canta Envido, el oponente tiene que responder "quiero" o "no quiero" . En caso de que
acepte, entonces el jugador mano debe cantar los puntos de envido que tiene en su
mano y el oponente le responde con sus puntos en caso de tener mayor puntaje, o
con el mensaje "son buenas" donde se le dará por ganado el Envido al jugador mano.
    El jugador con mas puntos será el ganador. En caso de empate gana el jugador que
es mano
    Al terminar la ronda, si el envido se quiso, quien lo haya ganado deberá mostrar las cartas
que conformaron su envido.
    Los puntos en caso de aceptar el enfrentamiento de Envido son 2 puntos, en caso
de no quererse el ganador recibe 1 punto.


__Tantos para el envido
    Además del orden jerárquico de las cartas, éstas tienen un puntaje determinado,
que es empleado en el envido. El puntaje de una carta coincide con su valor nominal
excepto para los diez, los onces, y los doces. El valor de estas tres cartas es cero.
    Los tantos o puntos para el envido se calculan de la siguiente forma:
Si se poseen dos o más cartas de igual palo, los tantos equivalen a la suma del puntaje de
dos cartas del mismo palo elegidas por el jugador más veinte puntos. Si se poseen tres
cartas de diferente palo, los tantos equivalen al puntaje de mayor jerarquía.



__Juego
    Se mezclan las cartas al azar y luego se reparten, una por vez, comenzando por el
jugador que es mano, tres cartas a cada jugador.
    Empieza jugando el jugador mano, quien puede bajar una carta, o cantar Envido o Truco.
   (Si canta truco, el otro jugador puede responderle que antes se debe jugar el envido,
y entonces el mano debe responder si acepta el envido o no)
    Si se cantó el envido entonces se entra en la fase del Envido mismo y luego el mano
tiene la posibilidad de cantar truco o bajar una carta.(Si canta truco, el oponente
debe contestar "quiero" o "no quiero" y despues bajar una carta).
    Una vez que el mano baja una carta, el oponente puede cantar Envido y/o Truco (en caso de
que no los haya cantado la mano, o que no se haya querido todavia el truco), y luego bajar una carta.
    Luego se verifica el ganador del primer enfrentamiento, y comienza el segundo
enfrentamiento el ganador del primero. En caso de empate coninúa la mano.
    Se repiten los pasos anteriores a excepción de la parte del Envido.
    Una vez que uno de los jugadores gana dos de los tres enfrentamientos, dá por
ganador al jugador que más enfrentamientos haya ganado. En el poco probable caso
de un empate, se procede de esta manera:



Ganador del primer      Ganador del segundo       Ganador del tercer        Ganador
 enfrentamiento             enfrentamiento           enfrentamiento

    A                           B                       Empate                A

    A                        Empate                       -                   A

  Empate                        A                         -                   A

  Empate                     Empate                       A                   A

  Empate                     Empate                     Empate              Mano


    Una vez que se termina la ronda, se suman los puntos correspondientes a cada
jugador.
    Cuando uno de los jugadores llegue a los puntos establecidos como objetivo,
entonces se lo considera ganador de la partida.
    Si ambos jugadores llegan en la misma ronda al puntaje objetivo, entonces el
ganador será el que llegó con los puntos del Envido.



2.5 SUPOSICIONES Y DEPENDENCIAS
version django
   ________COMPLETAR________


3. REQUERIMIENTOS ESPECÍFICOS
3.1 REQUERIMIENTOS DE INTERFAZ EXTERNA
3.1.1 INTERFACES DE USUARIO
3.1.2 INTERFACES DE HARDWARE
3.1.3 INTERFACES DE SOFTWARE
3.1.4 INTERFACES DE COMUNICACIÓN
3.2. REQUERIMIENTOS FUNCIONALES
  En esta sección se especifican los distintos casos de uso por los que puede
pasar un usuario durante el juego.

3.2.1 HOME
    ·Caso de uso: Ingreso al home de la aplicación.
    ·Actores primarios: Usuario y sistema.
    ·Precondición: El usuario debe tener un navegador con conexión a internet.
    ·Escenario exitoso principal:
     1. El usuario ingresa la url del juego.
     2. El sistema muestra al usuario la pantalla de home que contiene los campos
        de inicio de sesión o la posibilidad de registrarse como un nuevo usuario.


3.2.2 REGISTRO DE CUENTA
    ·Caso de uso: El usuario crea una cuenta nueva.
    ·Actores primarios: El usuario y el sistema. 
    ·Precondición: El usuario fue redirigido a la url de registro de cuenta.
    ·Escenario exitoso principal:
         1. El sistema muestra el formulario de registro de cuenta.
         2· El usuario rellena el formulario con sus datos.
         3· El usuario hace click en el boton de "Crear Cuenta".
         4. El sistema verifica los datos ingresados.
         5· El sistema crea la nueva cuenta en la base de datos.
         6. El sistema loguea al nuevo usuario y lo redirecciona al lobby.
    ·Escenarios excepcionales:
         4.a El formulario no está completo.
           · El sistema muestra un mensaje de error indicando que campos estan incompletos.
         4.b El nombre de usuario ya existe.
           · El sistema muestra un mensaje de error indicando que el nombre de usuario
             ya se encuentra en uso.
         4.c El usuario ingreso una contraseña diferente en el campo de verificación
             de contraseña.
           · El sistema muestra un mensaje de error indicando que las contraseñas no coinciden.

3.2.3 INICIAR SESIÓN
    Caso de uso: Inicio de sesión.
    Actores primarios: Usuario y el sistema.
    Precondición: El usuario debe tener una cuenta activa y debe estar situado en
                  la pantalla de home.
    Escenario exitoso principal:
    1. El jugador ingresa su nombre de usuario y contraseña y hace click
        en el botón de "Iniciar Sesión".
    2. El sistema verifica los datos y redirige al lobby.
  ·Escenarios excepcionales:
    2.a No existe un usuario con el nombre ingresado.
      · Se le comunica al jugador mediante un mensaje de error.
    2.b El usuario ingresó una contraseña incorrecta.
      · Se le comunica al jugador mediante el mismo mensaje de error del inciso 2a.


3.2.4 CREAR PARTIDA
    ·Caso de uso: Un usuario crea una partida.
    ·Actores primarios: El usuario y el sistema.
    ·Precondición: El usuario ha iniciado sesión, y a ingresado a "Crear Partida".
    ·Escenario exitoso principal:
        1. El usuario elige un nombre para su partida.
        2. El usuario elige una contraseña para su partida (opcional).
        3. El usuario elige entre 15 o 30 puntos objetivos para su partida.
        4. El usuario hace click en "Crear".
        5. El sistema registra la nueva partida y la muestra en el lobby.
        6. El sistema redirige al usuario a la mesa de juego.
    ·Escenarios excepcionales:
        4.a El usuario no ingresó los datos obligatorios.
            · El sistema muestra un mensaje de error.

3.2.5 UNIRSE A PARTIDA
    ·Caso de uso: Un usuario se une a una partida ya creada
    ·Actores primarios: El usuario que se une a la partida,
                        El usuario dueño de la partida,
                        El sistema.
    ·Precondición: El usuario que se une a la partida debe haber seleccionado
                    una partida ya creada en la cual todavía hay espacio para
                    un jugador más.
    ·Escenario exitoso pricipal:
        1. El usuario hace click en "Unirse a partida".
        2. El usuario ingresa la contraseña de la partida (si existe).
        3. El sistema redirecciona el usuario a la mesa de juego de la partida seleccionada.
        4. El sistema avisa al usuario dueño de la partida.
        5. El sistema inicia la primera ronda.
    ·Escenarios excepcionales:
        2.a La contraseña ingresada es incorrecta.
            El sistema muestra un mensaje de error.
        3.a En medio del proceso la partida es cerrada por su dueño.
            El sistema muestra un mensaje de error y redirecciona al lobby.


3.2.6 INICIAR UNA PARTIDA
    ·Caso de uso: Se inicia una partida.
    ·Actores primarios: Los jugadores y el sistema.
    ·Precondición: Ambos jugadores están en la mesa de juego.
    ·Escenario exitoso principal:
    1. El sistema verifica en registros quién creó la partida y lo asigna como jugador mano.
    2. El sistema inicia una nueva ronda.


3.2.7 INICIAR RONDA
    ·Caso de uso: Se inicia una ronda.
    ·Actores primarios: Los jugadores y el sistema.
    ·Precondición: Hay una partida en curso, ambos jugadores están en la mesa de juego.
    ·Escenario exitoso principal:
    1. El sistema verifica en los registros quién el jugador mano.
    2. El sistema reparte 3 cartas al azar a cada uno de los jugadores 
       (empezando por el jugador que es mano y siguiendo por el de la derecha).
    3. El sistema dá el turno al jugador que es mano.


3.2.7 CANTAR ENVIDO
    ·Caso de uso: Un jugador canta envido.
    ·Actores primarios: Los jugadores y el sistema.
    ·Precondiciónes: · Hay una partida en curso
                     · El jugador que canta se encuentra en el primer enfrentamiento.
                     · No se tiene que haber aceptado antes el truco.
                     · No se tiene que haber cantado antes el envido.
    ·Escenario exitoso principal:
    1. El usuario hace click en el botón 'Envido'
    2. El sistema registra el canto y por quién fue cantado.
    3. El sistema le da el turno al oponente.


3.2.7 CONTESTAR ENVIDO
    ·Caso de uso: Un jugador responde al envido.
    ·Actores primarios: Un jugador y el sistema.
    ·Precondiciónes: · Hay una partida en curso
                     · El oponente tiene que haber cantado envido en el turno anterior.
    ·Escenario exitoso principal:
    1. El sistema le muestre al jugador en turno las opciones 'Quiero' y 'No Quiero'.
    2. El jugador hace click en una de las opciones.
    3. El sistema registra la respuesta.


3.2.7 ACEPTAR ENVIDO
    ·Caso de uso: Se juega el envido.
    ·Actores primarios: El sistema.
    ·Precondiciónes: · Hay una partida en curso
                     · El envido tiene que haber sido cantado y aceptado.
    ·Escenario exitoso principal:
    1. El sistema calcula los puntos de todos los jugadores.
    2. El sistema muestra los puntos del jugador mano al otro jugador.
    3. El sistema muestra los puntos del ganador al otro jugador.
    4. El sistema registra al ganador del envido.
    5. El sistema verifica quién canto el envido.
    6. El sistema le cede el turno al jugador que cantó el envido.



3.2.7 RECHAZAR ENVIDO
    ·Caso de uso: Se rechaza el envido.
    ·Actores primarios: El sistema.
    ·Precondiciónes: · Hay una partida en curso
                     · El envido tiene que haber sido cantado y rechazado.
    ·Escenario exitoso principal:
    1. El sistema guarda en registro al ganador
    2. El sistema verifica quién canto el envido.
    3. El sistema le cede el turno al jugador que cantó el envido.


El usuario hace click en la opción 'Quiero'.
    3. El sistema registra que el envido fue aceptado.
    4. El sistema 
 

CERRAR SESION


    5. El sistema verifica en los registros que opciones tiene el jugador de turno 
       disponible para jugar y se las muestra en pantalla.
    6. El jugador de turno puede jugar una carta, cantar envido(sólo en el primer
       enfrentamiento), cantar truco, contestar un canto hecho por el otro jugador
       o irse al mazo, dependiendo de las opciones mostradas por el sistema.
    7. El sistema guarda en un registro las opciones seleccionadas en el punto anterior.
    8. El sistema verifica si las últimas dos opciones fueron 'Envido' y 'Quiero'. Entonces
       se juega el 'Envido'. Si fueron 'Envido' y 'No quiero', entonces el sistema guarda
       en registro el punto que le corresponde al usuario que cantó.
    9. El sistema verifica si las últimas opciones del registro fueron 'Truco' y 'Quiero'.
       En este caso, guarda el puntaje que le corresponde al ganador de la ronda.
    10. El sistema determina el ganador del enfrentamiento, si lo hay y lo guarda en
       un registro.
    11. El sistema verifica si hay un ganador de la ronda. Si lo hay actualiza el registro
        y termina la ronda. Caso contrario da el turno al jugador de la derecha del
        que lo tiene actualmente, y se vuelve al punto 5.
     Escenarios excepcionales:
    · Si hay una desconexión se le da por ganada la partida al jugador que
      está activo.
    6.a El jugador de turno no responde por un tiempo determinado de 30 segundos
        El sistema termina la partida y redirecciona a los jugadores al lobby.


3.2.8 ENVIDO
  ·Caso de uso: Procedimiento del envido.
  ·Actor primario: El sistema y los usuarios de una partida
  ·Precondición: Se debe haber iniciado la partida y se tiene que haber cantado y
                 aceptado el Envido.
  ·Escenario exitoso principal:
    1. El sistema verifica el registro para identificar quien es mano.
    2. El sistema le da el turno al jugador mano.
    3. El sistema verifica los puntos de Envido que tiene el jugador en turno y
       le habilita las opción correspondientes(para mostrar los puntos, y para decir
       'Son Buenas' en caso correspondiente).
    4. El jugador en turno hace click en la opción en pantalla.
    5. El sistema evalúa si hay un ganador y si lo hay, guarda en registro los puntos que le
       corresponden al ganador y que este debe mostrar las cartas. Caso contrario le da el turno
       al jugador de la derecha y vuelve al punto 3.
  ·Escenarios excepcionales:
    4.a El jugador no responde en 30 segundos.
      · El sistema anuncia los puntos como si el jugador hubiera echo click.



3.3 REQUERIMIENTOS DE PERFORMANCE
3.4 RESTRICCIONES DE DISEÑO
3.5 ATRIBUTOS
3.6 OTROS REQUERIMIENTOS
