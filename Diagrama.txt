HOME

browser->+view: request
alt Si está logueado
    view-->-browser: Redirect(Lobby)
else No está logueado
    view-->-browser: TemplateResponse(index)
end


REGISTRO DE CUENTA

browser->+view: request
view->+Form: is_valid()
Form-->-view: true
view->+Auth: create_user()
Auth->+User: get
User-->-Auth: new_user
Auth->Auth: login()
Auth-->-view:new_user
view-->-browser: Redirect(lobby)


ERROR REGISTRO DE CUENTA

browser->+view: request
view->+Form: is_valid()
Form-->-view: false
view-->-browser: Redirect(Registro, error)


INICIAR SESION

browser->+view: request
view->+Form: is_valid()
Form-->-view: true
view->+Auth: autenticate
Auth->+User: get
User-->-Auth: user
view->Auth: login(user)
Auth-->-view: user
view-->-browser: HttpResponseRedirect(lobby)


ERROR INICIAR SESION EN EL FORMULARIO

browser->+view: request
view->+Form: is_valid()
Form-->-view: false
view-->-browser: Redirect(IniciarSesion)


ERROR INICIAR SESION USUARIO INEXISTENTE

browser->+view: request
view->+Form: is_valid()
Form-->-view: true
view->+Auth: autenticate
Auth->+User: get
User-->-Auth: None
Auth-->-view: None
view-->-browser: HttpResponseRedirect(IniciarSesion)


CREAR PARTIDA

browser->+view: request
view->+Form: is_valid()
Form-->-view: true
view->+Lobby: crear_partida()
Lobby->Partida: agregar_jugador()
Lobby-->-view: partida
view-->-browser: Redirect(Partida)


ERROR AL CREAR PARTIDA

browser->+view: request
view->+Form: is_valid()
Form-->-view: false
view-->-browser: Redirect(CrearPartida)


UNIRSE A UNA PARTIDA

browser->+view: request(partida)
view->Lobby: unirse_partida()
Lobby->Partida: agregar_jugador()
Partida->view: éxito
view-->-browser: Redirect(EnEspera)


ERROR UNIRSE A UNA PARTIDA

browser->+view: request
view->+Lobby: unirse_partida()
Lobby-->-view: error
view-->-browser: Redirect(UnirsePartida)


INICIAR RONDA

browser->+view: request
view->Partida: crear_ronda()
Partida-->view: ronda
view->Ronda: repartir()
Ronda->+Mazo: get_n_cartas()
Mazo-->-Ronda: cartas
Ronda->Jugador1: asignar_cartas(cartas[0..2])
Ronda->Jugador2: asignar_cartas(cartas[3..5])
view-->-browser: Redirect(Ronda)


CANTAR ENVIDO

browser->+view: request
view->Ronda: crear_canto(envido)
view-->-browser: Redirect(EnEspera)


RECANTAR ENVIDO

browser->+view: request
view->Envido: aumentar()
view-->-browser: Redirect(EnEspera)

ACEPTAR ENVIDO

browser->+view: request(QUIERO)
view->Envido: aceptar()
Envido->Envido: set_puntos_en_juego()
view-->-browser: Redirect(CantarPuntos)


RECHAZAR ENVIDO

browser->+view: request(NO QUIERO)
view->Envido: rechazar()
Envido->Envido: set_puntos_en_juego()
view-->-browser: Redirect(EnEspera)


CANTAR TRUCO

browser->+view: request
view->Ronda: crear_canto(truco)
view-->-browser: Redirect(EnEspera)


RECANTAR TRUCO

browser->+view: request
view->+Truco: aumentar()
view-->-browser: Redirect(EnEspera)


ACEPTAR TRUCO

browser->+view: request(QUIERO) 
view->Truco: aceptar()
view-->-browser: Redirect(EnEspera)


RECHAZAR TRUCO

browser->+view: request(NO QUIERO) 
view->Truco: rechazar()
view-->-browser: Redirect(EnEspera)


TIRAR UNA CARTA

browser->+view: request(carta)
alt No hay un enfrentamiento creado
    view->+Ronda: crear_enfrentamiento()
    Ronda->Enfrentamiento: agregar_carta()
    Ronda-->-view: enfrentamiento
else Ya hay unfrentamiento iniciado
    view->Enfrentamiento: agregar_carta()
    view->+Enfrentamiento: termino()
    Enfrentamiento-->-view: estado
end
    view-->-browser: Redirect(EnEspera)


PARTIDA

browser->+view: request()
view->+Partida: partida_is_ready()
alt Se terminó la ronda pero no la partida
    Partida-->-view: true
    view-->-browser: Redirect(PedirPuntos)
else Se terminó la partida
    Partida-->-view: false
    view-->-browser: Redirect(index)
end


EN ESPERA

browser->+view: request()
view->+Ronda: mi_turno()
alt No es mi turno aún
    Ronda-->-view: false
    view-->-browser: Redirect(EnEspera)
else Es mi turno
    Ronda-->-view: true
    view-->-browser: Redirect(Ronda)


CERRAR SESIÓN

browser->+view: request
view->Auth: logout()
view-->-browser: Redirect(lobby)

MOSTRAR PUNTOS

browser->+view: request(MostrarPuntos)
view->Ronda: set_puntos_mostrados()
view-->-browser: Redirect(EnEspera)


PEDIR PUNTOS

browser->+view: request(PedirPuntos)
view->Ronda: set_puntos_pedidos()
view-->-browser: redirect(EnEspera)


SIGUIENTE RONDA

browser->+view: request(SiguienteRonda)
view->Ronda: sumar_jugador_listo()
view->+Ronda: faltan_jugadores_listos()
FinRonda-->-view:
alt Faltan jugadores listos
view-->browser: Redirect(EnEspera)
else No faltan
view-->browser: Redirect(Partida)


CANTAR PUNTOS

browser->view:request()
note right of view: Se muestran un formulario para \ndecir los puntos a cantar
alt el jugador escribe sus puntos
view->Envido: set_puntos(jugador,puntos_cantados)
else el jugador dice "son buenas"
view->Envido: set_puntos(jugador,0)
end
view-->browser: redirect(EnEspera)
